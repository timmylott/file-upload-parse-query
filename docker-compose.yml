services:
  postgres:
    image: postgres:15
    container_name: iceberg-postgres
    environment:
      POSTGRES_USER: iceberg_user
      POSTGRES_PASSWORD: iceberg_pass
      POSTGRES_DB: iceberg_catalog
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - iceberg_net

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      - iceberg_net
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    depends_on:
      - postgres
      - minio
    networks:
      - iceberg_net
    volumes:
      - ./spark_app:/home/iceberg/app
      - ./notebooks:/home/iceberg/notebooks
      - shared_trigger:/shared
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - "8888:8888"
      - "8080:8080"

  trino:
    image: trinodb/trino:435
    container_name: trino
    depends_on:
      - postgres
      - minio
    networks:
      - iceberg_net
    ports:
      - "8082:8080"
    volumes:
      - ./trino/etc:/etc/trino

  fastapi:
    build: ./fastapi_app
    container_name: fastapi_app
    networks:
      - iceberg_net
    ports:
      - "8000:8000"
    depends_on:
      - minio
      - spark-iceberg
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
      MINIO_BUCKET: uploads
    volumes:
      - ./fastapi_app:/app
      - shared_trigger:/shared

volumes:
  pg_data:
  minio_data:
  shared_trigger:

networks:
  iceberg_net:
